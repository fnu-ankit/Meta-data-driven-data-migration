{
	"name": "pl_onprem_to_az",
	"properties": {
		"activities": [
			{
				"name": "Metadata Loop",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy on-prem data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "old_watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "new_watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "Select * \nfrom @{item().TABLE_NAME} \nwhere @{item().WaterMark_Column} between '@{activity('old_watermark').output.firstRow.old_wm}' and '@{activity('new_watermark').output.firstRow.new_wm}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"isolationLevel": "ReadCommitted",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": false,
										"keys": {
											"value": "@item().MERGE_KEY",
											"type": "Expression"
										}
									},
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"validateDataConsistency": true,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ank_ds_onprem",
									"type": "DatasetReference",
									"parameters": {
										"Source_Table_Name": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ank_ds_az",
									"type": "DatasetReference",
									"parameters": {
										"Destination_Table_Name": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "old_watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "Select watermarkvalue as old_wm from watermarktable where tablename='@{item().TABLE_NAME}'",
									"queryTimeout": "02:00:00",
									"isolationLevel": "ReadCommitted",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ank_ds_az",
									"type": "DatasetReference",
									"parameters": {
										"Destination_Table_Name": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "new_watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "Select max(@{item().WaterMark_Column}) as new_wm \nfrom @{item().TABLE_NAME}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"isolationLevel": "ReadCommitted",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ank_ds_onprem",
									"type": "DatasetReference",
									"parameters": {
										"Source_Table_Name": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy on-prem data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"lastmodifiedtime": {
										"value": {
											"value": "@{activity('new_watermark').output.firstRow.new_wm}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"tablename": {
										"value": {
											"value": "@{item().TABLE_NAME}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ankit_aug_az_ls",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Get Metadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"annotations": []
	}
}